name: build

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches: 
      - '*'
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.os }} ${{ matrix.version }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        version: ['stable', 'insiders']

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.18'

      - name: Install Dependencies
        run: npm ci
        shell: bash
      
      - name: Compile sources for tests
        run: npm run test-compile

      - name: Cache VSCode binary
        id: cache-vscode
        uses: actions/cache@v4
        with:
          path: .vscode-test
          key: vscode-${{ runner.os }}-${{ matrix.version }}-${{ github.run_id }}
          restore-keys: |
            vscode-${{ runner.os }}-${{ matrix.version }}-
            vscode-${{ runner.os }}-
      
      - name: Run tests
        uses: coactions/setup-xvfb@v1
        with:
          run: npm test
        env:
          CODE_VERSION: ${{ matrix.version }}
        continue-on-error: ${{ matrix.version == 'insiders' }}

      - name: Release
        if: startsWith(matrix.os, 'ubuntu') && matrix.version == 'stable' && github.ref == 'refs/heads/master'
        run: |
          npm run organize
          npx @vscode/vsce package -o svn-scm-community.vsix
          npm run semantic-release
        env:
          VSCE_TOKEN: ${{ secrets.vsceToken }}
          GITHUB_TOKEN: ${{ secrets.githubToken }}
          GH_TOKEN: ${{ secrets.githubToken }}
          GIT_AUTHOR_EMAIL: ${{ secrets.gitEmail }}
          GIT_COMMITTER_EMAIL: ${{ secrets.gitEmail }}
          GIT_AUTHOR_NAME: ${{ secrets.gitName }}
          GIT_COMMITTER_NAME: ${{ secrets.gitName }}

  eslint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.18'

      - name: Install Dependencies
        run: npm ci
        shell: bash

      - name: Lint check
        run: npm run lint --silent -- -f stylish

  artifact:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.18'

      - name: Install Dependencies
        run: npm ci
        shell: bash

      - name: Package extension
        run: npx @vscode/vsce package -o svn-scm-community.vsix

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "svn-scm-community-${{ github.sha }}.vsix"
          path: "svn-scm-community.vsix"

      - name: Package OpenVSX extension
        run: |
          npm add iconv-lite jschardet
          npx @vscode/vsce package -o svn-scm-community-ovsx.vsix

      - name: Upload OpenVSX artifact
        uses: actions/upload-artifact@v4
        with:
          name: "svn-scm-community-ovsx-${{ github.sha }}.vsix"
          path: "svn-scm-community-ovsx.vsix"


  release:
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/master' && github.event_name == 'push') || github.event_name == 'workflow_dispatch'
    needs: [build, eslint, artifact]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.18'

      - name: Install Dependencies
        run: npm ci
        shell: bash

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: "svn-scm-community-${{ github.sha }}.vsix"

      - name: Download OpenVSX artifact
        uses: actions/download-artifact@v4
        with:
          name: "svn-scm-community-ovsx-${{ github.sha }}.vsix"

      - name: Get package version
        id: package-version
        run: |
          echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          name: Release v${{ env.PACKAGE_VERSION }}
          files: |
            svn-scm-community.vsix
            svn-scm-community-ovsx.vsix
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to OpenVSX Registry
        if: startsWith(github.ref, 'refs/tags/')
        run: npx ovsx publish svn-scm-community-ovsx.vsix
        env:
          OVSX_PAT: ${{ secrets.OVSX_TOKEN }}